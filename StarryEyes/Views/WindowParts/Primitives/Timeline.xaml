<UserControl x:Class="StarryEyes.Views.WindowParts.Primitives.Timeline"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviors="clr-namespace:StarryEyes.Views.Behaviors"
             xmlns:controls="clr-namespace:StarryEyes.Views.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:helpers="clr-namespace:StarryEyes.Views.Utils"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:localize="clr-namespace:StarryEyes.Globalization.WindowParts"
             xmlns:mbehaviors="clr-namespace:StarryEyes.Views.Messaging.Behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:metrocontrols="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:primitives="clr-namespace:StarryEyes.Views.WindowParts.Primitives"
             xmlns:statuses="clr-namespace:StarryEyes.ViewModels.Timelines.Statuses"
             xmlns:tabs="clr-namespace:StarryEyes.ViewModels.Timelines.Tabs"
             xmlns:utils="clr-namespace:StarryEyes.Views.Utils"
             x:Name="TimelineRoot"
             FocusVisualStyle="{x:Null}"
             UseLayoutRounding="True"
             d:DataContext="{d:DesignInstance Type={x:Type tabs:TabViewModel}}"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <utils:BooleanToVisibleConverter x:Key="BooleanToVisibleConverter" />
            <utils:BooleanToInvisibleConverter x:Key="BooleanToInvisibleConverter" />
            <utils:BooleanInversionConverter x:Key="BooleanInversionConverter" />
            <utils:TLTimeStampConverter x:Key="TLTimeStampConverter" />
            <DataTemplate x:Key="UserItemTemplate" DataType="{x:Type statuses:UserViewModel}">
                <controls:LazyImage Width="20"
                                    Height="20"
                                    Cursor="Hand"
                                    DecodePixelWidth="20"
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    ToolTip="{Binding ScreenName,
                                                      Mode=OneTime}"
                                    UriSource="{Binding ProfileImageUriMini,
                                                        Mode=OneTime}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <ei:CallMethodAction MethodName="OpenUserDetail" TargetObject="{Binding Mode=OneTime}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </controls:LazyImage>
            </DataTemplate>
            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
            <ContextMenu x:Key="StatusContextMenu" DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineReply}" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToInvisibleConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="SendReplyOrDirectMessage" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineSelectedReplyAll}" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibleConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="ReplySelecteds" TargetObject="{Binding Parent}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <Separator />
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineSelect}" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToInvisibleConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="ToggleSelect" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineUnselect}" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibleConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="ToggleSelect" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineSelectedOperation}" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibleConverter}}">
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineSelectedFavorite}" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibleConverter}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="FavoriteSelecteds" TargetObject="{Binding Parent}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineSelectedExtract}" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibleConverter}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="ExtractSelecteds" TargetObject="{Binding Parent}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineSelectedUnselectAll}" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibleConverter}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="DeselectAll" TargetObject="{Binding Parent}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                </MenuItem>
                <Separator />
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineFavorite}" Visibility="{Binding CanFavoriteImmediate, Converter={StaticResource BooleanToVisibleConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="ToggleFavoriteImmediate" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineFavoriteSelect}" Visibility="{Binding CanFavorite, Converter={StaticResource BooleanToVisibleConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="ToggleFavorite" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>

                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineRetweet}" Visibility="{Binding CanRetweetImmediate, Converter={StaticResource BooleanToVisibleConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="ToggleRetweetImmediate" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineRetweetSelect}" Visibility="{Binding CanRetweet, Converter={StaticResource BooleanToVisibleConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="ToggleRetweet" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineQuote}" Visibility="{Binding IsDirectMessage, Converter={StaticResource BooleanToInvisibleConverter}}">
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineQuotePermalink}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="QuotePermalink" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineQuoteUnofficialRetweet}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="Quote" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineDelete}" Visibility="{Binding CanDelete, Converter={StaticResource BooleanToVisibleConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="ConfirmDelete" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <Separator />
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisTweet}" Visibility="{Binding IsDirectMessage, Converter={StaticResource BooleanToInvisibleConverter}}">
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisTweetOpenConversation}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="ShowConversation" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisTweetCopyBody}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="CopyBody" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisTweetCopyPermalink}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="CopyPermalink" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisTweetCopySTOT}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="CopySTOT" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisTweetOpenWeb}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="OpenWeb" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisTweetOpenFavstar}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="OpenFavstar" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisUser}">
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisUserProfile}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="ShowUserProfile" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisUserDirectMessage}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="DirectMessage" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisUserOpenTwitter}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="OpenUserDetailOnTwitter" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisUserOpenTwilog}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="OpenUserTwilog" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisUserOpenFavstar}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="OpenUserFavstar" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineThisUserReportSpam}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="ReportAsSpam" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineMute}" Visibility="{Binding IsDirectMessage, Converter={StaticResource BooleanToInvisibleConverter}}">
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineMuteUser}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="MuteUser" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineMuteClient}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="MuteClient" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                </MenuItem>
                <Separator />
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TimelineReceiveOlder}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="ReceiveOlder" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
            </ContextMenu>

            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
            <ContextMenu x:Key="TextContextMenu" DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TextCopyClipboard}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="CopyText" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TextCopyInput}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="SetTextToInputBox" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <Separator />
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TextSearchLocal}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="FindOnKrile" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TextSearchTwitter}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="FindOnTwitter" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <Separator />
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TextSearchGoogle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="FindOnGoogle" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <Separator />
                <MenuItem Header="{x:Static localize:MainAreaTimelineResources.TextMute}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="MuteKeyword" TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
            </ContextMenu>

            <ResourceDictionary x:Key="StatusResource">
                <!--  <SolidColorBrush x:Key="TweetBackgroundBrush" Color="{DynamicResource TweetDefaultBackground}" />  -->
                <SolidColorBrush x:Key="TweetForegroundBrush" Color="{DynamicResource TweetDefaultForeground}" />
                <!--  <SolidColorBrush x:Key="TweetHighlightBackgroundBrush" Color="{DynamicResource TweetDefaultHighlightBackground}" />  -->
                <!--  <SolidColorBrush x:Key="TweetHighlightForegroundBrush" Color="{DynamicResource TweetDefaultHighlightForeground}" />  -->
                <SolidColorBrush x:Key="KeyTextBrush" Color="{DynamicResource TweetDefaultKeyText}" />
                <SolidColorBrush x:Key="SubTextBrush" Color="{DynamicResource TweetDefaultSubText}" />
                <SolidColorBrush x:Key="HyperlinkTextBrush" Color="{DynamicResource TweetDefaultHyperlinkText}" />
                <SolidColorBrush x:Key="FavoriteCounter" Color="{DynamicResource TweetDefaultFavoriteCounter}" />
                <SolidColorBrush x:Key="RetweetCounter" Color="{DynamicResource TweetDefaultRetweetCounter}" />
                <SolidColorBrush x:Key="RetweetMarker" Color="{DynamicResource TweetDefaultRetweetMarker}" />
                <SolidColorBrush x:Key="FavAndRtBackground" Color="{DynamicResource TweetDefaultFavAndRtButtonBackground}" />
                <SolidColorBrush x:Key="FavAndRtForeground" Color="{DynamicResource TweetDefaultFavAndRtButtonForeground}" />
                <SolidColorBrush x:Key="FavAndRtHoveringBackground" Color="{DynamicResource TweetDefaultFavAndRtButtonHoveringBackground}" />
                <SolidColorBrush x:Key="FavAndRtHoveringForeground" Color="{DynamicResource TweetDefaultFavAndRtButtonHoveringForeground}" />
                <SolidColorBrush x:Key="FavAndRtPressedBackground" Color="{DynamicResource TweetDefaultFavAndRtButtonPressedBackground}" />
                <SolidColorBrush x:Key="FavAndRtPressedForeground" Color="{DynamicResource TweetDefaultFavAndRtButtonPressedForeground}" />
                <SolidColorBrush x:Key="FavoriteBackground" Color="{DynamicResource TweetDefaultFavoriteButtonBackground}" />
                <SolidColorBrush x:Key="FavoriteForeground" Color="{DynamicResource TweetDefaultFavoriteButtonForeground}" />
                <SolidColorBrush x:Key="FavoriteHoveringBackground" Color="{DynamicResource TweetDefaultFavoriteButtonHoveringBackground}" />
                <SolidColorBrush x:Key="FavoriteHoveringForeground" Color="{DynamicResource TweetDefaultFavoriteButtonHoveringForeground}" />
                <SolidColorBrush x:Key="FavoritePressedBackground" Color="{DynamicResource TweetDefaultFavoriteButtonPressedBackground}" />
                <SolidColorBrush x:Key="FavoritePressedForeground" Color="{DynamicResource TweetDefaultFavoriteButtonPressedForeground}" />
                <SolidColorBrush x:Key="ColoredFavoriteBackground" Color="{DynamicResource TweetDefaultColoredFavoriteButtonBackground}" />
                <SolidColorBrush x:Key="ColoredFavoriteForeground" Color="{DynamicResource TweetDefaultColoredFavoriteButtonForeground}" />
                <SolidColorBrush x:Key="ColoredFavoriteHoveringBackground" Color="{DynamicResource TweetDefaultColoredFavoriteButtonHoveringBackground}" />
                <SolidColorBrush x:Key="ColoredFavoriteHoveringForeground" Color="{DynamicResource TweetDefaultColoredFavoriteButtonHoveringForeground}" />
                <SolidColorBrush x:Key="ColoredFavoritePressedBackground" Color="{DynamicResource TweetDefaultColoredFavoriteButtonPressedBackground}" />
                <SolidColorBrush x:Key="ColoredFavoritePressedForeground" Color="{DynamicResource TweetDefaultColoredFavoriteButtonPressedForeground}" />
                <SolidColorBrush x:Key="RetweetBackground" Color="{DynamicResource TweetDefaultRetweetButtonBackground}" />
                <SolidColorBrush x:Key="RetweetForeground" Color="{DynamicResource TweetDefaultRetweetButtonForeground}" />
                <SolidColorBrush x:Key="RetweetHoveringBackground" Color="{DynamicResource TweetDefaultRetweetButtonHoveringBackground}" />
                <SolidColorBrush x:Key="RetweetHoveringForeground" Color="{DynamicResource TweetDefaultRetweetButtonHoveringForeground}" />
                <SolidColorBrush x:Key="RetweetPressedBackground" Color="{DynamicResource TweetDefaultRetweetButtonPressedBackground}" />
                <SolidColorBrush x:Key="RetweetPressedForeground" Color="{DynamicResource TweetDefaultRetweetButtonPressedForeground}" />
                <SolidColorBrush x:Key="ColoredRetweetBackground" Color="{DynamicResource TweetDefaultColoredRetweetButtonBackground}" />
                <SolidColorBrush x:Key="ColoredRetweetForeground" Color="{DynamicResource TweetDefaultColoredRetweetButtonForeground}" />
                <SolidColorBrush x:Key="ColoredRetweetHoveringBackground" Color="{DynamicResource TweetDefaultColoredRetweetButtonHoveringBackground}" />
                <SolidColorBrush x:Key="ColoredRetweetHoveringForeground" Color="{DynamicResource TweetDefaultColoredRetweetButtonHoveringForeground}" />
                <SolidColorBrush x:Key="ColoredRetweetPressedBackground" Color="{DynamicResource TweetDefaultColoredRetweetButtonPressedBackground}" />
                <SolidColorBrush x:Key="ColoredRetweetPressedForeground" Color="{DynamicResource TweetDefaultColoredRetweetButtonPressedForeground}" />
                <SolidColorBrush x:Key="MentionBackground" Color="{DynamicResource TweetDefaultMentionButtonBackground}" />
                <SolidColorBrush x:Key="MentionForeground" Color="{DynamicResource TweetDefaultMentionButtonForeground}" />
                <SolidColorBrush x:Key="MentionHoveringBackground" Color="{DynamicResource TweetDefaultMentionButtonHoveringBackground}" />
                <SolidColorBrush x:Key="MentionHoveringForeground" Color="{DynamicResource TweetDefaultMentionButtonHoveringForeground}" />
                <SolidColorBrush x:Key="MentionPressedBackground" Color="{DynamicResource TweetDefaultMentionButtonPressedBackground}" />
                <SolidColorBrush x:Key="MentionPressedForeground" Color="{DynamicResource TweetDefaultMentionButtonPressedForeground}" />
                <SolidColorBrush x:Key="DeleteBackground" Color="{DynamicResource TweetDefaultDeleteButtonBackground}" />
                <SolidColorBrush x:Key="DeleteForeground" Color="{DynamicResource TweetDefaultDeleteButtonForeground}" />
                <SolidColorBrush x:Key="DeleteHoveringBackground" Color="{DynamicResource TweetDefaultDeleteButtonHoveringBackground}" />
                <SolidColorBrush x:Key="DeleteHoveringForeground" Color="{DynamicResource TweetDefaultDeleteButtonHoveringForeground}" />
                <SolidColorBrush x:Key="DeletePressedBackground" Color="{DynamicResource TweetDefaultDeleteButtonPressedBackground}" />
                <SolidColorBrush x:Key="DeletePressedForeground" Color="{DynamicResource TweetDefaultDeleteButtonPressedForeground}" />
            </ResourceDictionary>

            <DataTemplate x:Key="StatusItemTemplate"
                          DataType="{x:Type statuses:StatusViewModel}"
                          Resources="{StaticResource StatusResource}">
                <Grid x:Name="BaseGrid"
                      Background="Transparent"
                      ContextMenu="{StaticResource StatusContextMenu}"
                      primitives:TimelineSwapResourcesBehavior.ResourceSet="Default">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <ei:CallMethodAction MethodName="ToggleFocus" TargetObject="{Binding Mode=OneTime}" />
                        </i:EventTrigger>
                        <l:InteractionMessageTrigger Messenger="{Binding Messenger, Mode=OneTime}">
                            <mbehaviors:BringIntoViewInteractionMessageAction />
                        </l:InteractionMessageTrigger>
                    </i:Interaction.Triggers>
                    <Border x:Name="SingleLineBorder"
                            Margin="0"
                            Background="Transparent"
                            BorderBrush="{DynamicResource TweetDefaultSubTextBrush}"
                            BorderThickness="0,0,0,1"
                            IsHitTestVisible="{Binding IsExpanded,
                                                       Converter={StaticResource BooleanInversionConverter}}"
                            Padding="0"
                            RenderTransformOrigin="0.5,1"
                            Visibility="{Binding IsExpanded,
                                                 Mode=OneWay,
                                                 Converter={StaticResource BooleanToInvisibleConverter},
                                                 FallbackValue=Collapsed}">
                        <Grid MinHeight="24"
                              MaxHeight="{Binding ActualHeight, ElementName=TweetStatusBody}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="64" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <controls:LazyImage ClipToBounds="True"
                                                Grid.Column="0"
                                                Height="{Binding RelativeSource={RelativeSource Self}, Path=Source.PixelHeight}"
                                                Margin="8,0"
                                                DecodePixelWidth="48"
                                                RenderOptions.BitmapScalingMode="HighQuality"
                                                UriSource="{Binding User.ProfileImageUriOptimized,
                                                                    Mode=OneWay}"
                                                UseLayoutRounding="True"
                                                VerticalAlignment="Center"
                                                Width="{Binding RelativeSource={RelativeSource Self}, Path=Source.PixelWidth}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <ei:CallMethodAction MethodName="ShowUserProfile" TargetObject="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </controls:LazyImage>
                            <Border Grid.Column="0"
                                    Width="8"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Stretch"
                                    Background="{DynamicResource GlobalKeyBrush}"
                                    Visibility="{Binding IsSelected,
                                                         Converter={StaticResource BooleanToVisibleConverter}}" />
                            <Border Grid.Column="0"
                                    Width="8"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Stretch"
                                    Background="Transparent">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <ei:CallMethodAction MethodName="ToggleSelect" TargetObject="{Binding Mode=OneTime}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Border>
                            <StackPanel x:Name="TweetStatusBody"
                                        Grid.Column="1">
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                               Margin="2,0,4,0"
                                               VerticalAlignment="Center"
                                               Cursor="Hand"
                                               FontFamily="Segoe UI Semibold"
                                               FontSize="13.333"
                                               Foreground="{DynamicResource KeyTextBrush}"
                                               Text="{Binding User.ScreenName,
                                                              FallbackValue=uSeR,
                                                              Mode=OneTime}"
                                               TextWrapping="NoWrap">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                <ei:CallMethodAction MethodName="ShowUserProfile" TargetObject="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBlock>
                                    <TextBlock Grid.Column="2"
                                               Margin="4,0"
                                               VerticalAlignment="Center"
                                               FontSize="10.667"
                                               Foreground="{DynamicResource SubTextBrush}"
                                               IsHitTestVisible="False"
                                               Text="{Binding CreatedAt,
                                                              Mode=OneWay,
                                                              Converter={StaticResource TLTimeStampConverter}}"
                                               TextWrapping="NoWrap" />
                                </Grid>
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                               Margin="8,0,0,0"
                                               VerticalAlignment="Center"
                                               Foreground="{DynamicResource TweetForegroundBrush}"
                                               IsHitTestVisible="False"
                                               Text="{Binding SingleLineText}"
                                               TextTrimming="CharacterEllipsis"
                                               TextWrapping="NoWrap"
                                               Visibility="{Binding IsSingleLine,
                                                                    Converter={StaticResource BooleanToVisibleConverter}}" />
                                    <TextBlock Grid.Column="0"
                                               Margin="8,0,0,0"
                                               VerticalAlignment="Center"
                                               Foreground="{DynamicResource TweetForegroundBrush}"
                                               IsHitTestVisible="False"
                                               Text="{Binding MultiLineText}"
                                               TextWrapping="Wrap"
                                               Visibility="{Binding IsSingleLine,
                                                                    Converter={StaticResource BooleanToInvisibleConverter}}" />
                                    <StackPanel Grid.Column="1"
                                                Width="Auto"
                                                Margin="4,0"
                                                IsHitTestVisible="False"
                                                Orientation="Horizontal"
                                                Visibility="{Binding IsFavoritedUserExists,
                                                                     Mode=OneWay,
                                                                     Converter={StaticResource BooleanToVisibleConverter}}">
                                        <Path Width="Auto"
                                              Height="11"
                                              Margin="2,0"
                                              VerticalAlignment="Center"
                                              Data="F1 M 17.5,22.5L 22.3928,22.5L 24,18L 25.6071,22.5L 30.5,22.5L 26.4252,25.4193L 28.25,30L 24,27.5L 20.25,30L 21.6625,25.4875L 17.5,22.5 Z "
                                              Fill="{DynamicResource FavoriteCounter}"
                                              Stretch="Fill" />
                                        <TextBlock Margin="1,-1,5,0"
                                                   VerticalAlignment="Center"
                                                   FontFamily="Segoe UI Semilight"
                                                   Foreground="{DynamicResource FavoriteCounter}"
                                                   IsHitTestVisible="False"
                                                   Text="{Binding FavoriteCount,
                                                                  Mode=OneWay,
                                                                  FallbackValue=00}"
                                                   TextWrapping="Wrap" />
                                    </StackPanel>
                                    <StackPanel Grid.Column="2"
                                                Width="Auto"
                                                Margin="4,0"
                                                Orientation="Horizontal"
                                                Visibility="{Binding IsRetweetedUserExists,
                                                                     Mode=OneWay,
                                                                     Converter={StaticResource BooleanToVisibleConverter}}">
                                        <Path Width="Auto"
                                              Height="12"
                                              Margin="2,0"
                                              VerticalAlignment="Center"
                                              Data="F1 M 24,18.9231C 25.4548,18.9231 26.7667,19.535 27.6923,20.5154L 27.6923,18L 29.0769,19.3846L 29.0769,23.0769L 25.3846,23.0769L 24,21.6923L 26.5801,21.6923C 25.9463,20.9841 25.0252,20.5385 24,20.5385C 22.2447,20.5385 20.7946,21.8449 20.569,23.5385L 18.9438,23.5385C 19.177,20.9508 21.3517,18.9231 24,18.9231 Z M 24,27.4615C 25.7553,27.4615 27.2054,26.1551 27.431,24.4615L 29.0562,24.4615C 28.823,27.0492 26.6483,29.0769 24,29.0769C 22.5452,29.0769 21.2333,28.465 20.3077,27.4846L 20.3077,30L 18.9231,28.6154L 18.9231,24.9231L 22.6154,24.9231L 24,26.3077L 21.4199,26.3077C 22.0537,27.0159 22.9748,27.4615 24,27.4615 Z "
                                              Fill="{DynamicResource RetweetCounter}"
                                              Stretch="Fill" />
                                        <TextBlock Margin="1,-1,0,0"
                                                   VerticalAlignment="Center"
                                                   FontFamily="Segoe UI Semilight"
                                                   Foreground="{DynamicResource RetweetCounter}"
                                                   IsHitTestVisible="False"
                                                   Text="{Binding RetweetCount,
                                                                  Mode=OneWay,
                                                                  FallbackValue=00}"
                                                   TextWrapping="Wrap" />
                                    </StackPanel>
                                </Grid>
                                <Label Height="2" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <Border x:Name="MainBorder"
                            BorderBrush="{DynamicResource TweetDefaultSubTextBrush}"
                            BorderThickness="0,0,0,1"
                            Margin="0"
                            IsHitTestVisible="{Binding IsExpanded}"
                            Padding="0"
                            RenderTransformOrigin="0.5,1"
                            Visibility="{Binding IsExpanded,
                                                 Mode=OneWay,
                                                 Converter={StaticResource BooleanToVisibleConverter},
                                                 FallbackValue=Collapsed}">
                        <Border.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Border.LayoutTransform>
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter">
                                <ei:GoToStateAction StateName="OnMouseOver" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <ei:GoToStateAction StateName="Default" />
                            </i:EventTrigger>
                            <ei:DataTrigger Binding="{Binding IsFocused, Mode=OneWay}" Value="True">
                                <ei:GoToStateAction StateName="Focused" />
                            </ei:DataTrigger>
                            <ei:DataTrigger Binding="{Binding IsFocused, Mode=OneWay}" Value="False">
                                <ei:GoToStateAction StateName="NotFocused" />
                            </ei:DataTrigger>
                        </i:Interaction.Triggers>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="StatusSelection">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckBoxBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="CheckBoxBorder" Storyboard.TargetProperty="IsHitTestVisible">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.0" Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckBoxBorder" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="24">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="checkBox" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static VerticalAlignment.Center}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="viewbox" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="0,0,6,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PseudoSpaceBorder" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="24" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NotSelected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckBoxBorder" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PseudoSpaceBorder" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckBoxBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="CheckBoxBorder" Storyboard.TargetProperty="IsHitTestVisible">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="StatusFocus">
                                <VisualState x:Name="NotFocused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionQuickView" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActionQuickView" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionQuickView" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionDetailView" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActionDetailView" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionDetailView" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackHighlightBorder" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#0C000000" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.CenterY)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[1].(SkewTransform.CenterY)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[2].(RotateTransform.CenterY)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActionDetailView" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionDetailView" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionQuickView" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActionQuickView" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionQuickView" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionDetailView" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InReplyToBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BackHighlightBorder"
                                Margin="0"
                                Background="Transparent"
                                Padding="0">
                            <Border x:Name="OverrideBorder"
                                    Margin="0"
                                    Background="Transparent"
                                    Padding="0">

                                <Grid Width="Auto"
                                      Height="Auto"
                                      Margin="8,10,0,10">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <i:Interaction.Triggers>
                                        <ei:DataTrigger Binding="{Binding Parent.IsStatusSelected, Mode=OneWay}" Value="True">
                                            <ei:GoToStateAction StateName="Selected" />
                                        </ei:DataTrigger>
                                        <ei:DataTrigger Binding="{Binding Parent.IsStatusSelected, Mode=OneWay}" Value="False">
                                            <ei:GoToStateAction StateName="NotSelected" />
                                        </ei:DataTrigger>
                                    </i:Interaction.Triggers>
                                    <Border x:Name="InReplyToBorder"
                                            Grid.RowSpan="1"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2"
                                            Width="Auto"
                                            Height="Auto"
                                            Margin="-8,-10,0,10"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            Background="Transparent"
                                            Cursor="Hand"
                                            Visibility="Collapsed">
                                        <Border.LayoutTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Border.LayoutTransform>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                <ei:CallMethodAction MethodName="ShowConversation" TargetObject="{Binding Mode=OneTime}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <StackPanel Visibility="{Binding IsInReplyToExists, Converter={StaticResource BooleanToVisibleConverter}, Mode=OneWay}">
                                            <StackPanel Visibility="{Binding IsInReplyToLoaded, Converter={StaticResource BooleanToVisibleConverter}, Mode=OneWay}">
                                                <Grid Height="Auto"
                                                      Background="{x:Null}"
                                                      IsHitTestVisible="False"
                                                      Visibility="{Binding IsInReplyToAvailable,
                                                                           Converter={StaticResource BooleanToVisibleConverter},
                                                                           Mode=OneWay}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="8" />
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="48" />
                                                        <ColumnDefinition />
                                                    </Grid.ColumnDefinitions>
                                                    <Border x:Name="PseudoSpaceBorder"
                                                            Grid.Column="1"
                                                            Width="0"
                                                            Height="Auto"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Stretch" />
                                                    <Border Grid.RowSpan="1"
                                                            Grid.Column="2"
                                                            Width="48"
                                                            Height="48"
                                                            Margin="0,7"
                                                            HorizontalAlignment="Right"
                                                            VerticalAlignment="Top"
                                                            Background="#19808080">
                                                        <controls:LazyImage DecodePixelWidth="48"
                                                                            RenderOptions.BitmapScalingMode="HighQuality"
                                                                            UriSource="{Binding InReplyToUserImage,
                                                                                                Mode=OneWay}"
                                                                            UseLayoutRounding="True" />
                                                    </Border>
                                                    <StackPanel Grid.Column="3"
                                                                Width="Auto"
                                                                Height="Auto"
                                                                Margin="0,7"
                                                                HorizontalAlignment="Stretch"
                                                                VerticalAlignment="Top">
                                                        <DockPanel Width="Auto"
                                                                   Height="Auto"
                                                                   Margin="0,-2,0,3"
                                                                   HorizontalAlignment="Stretch"
                                                                   VerticalAlignment="Stretch"
                                                                   LastChildFill="False">
                                                            <TextBlock Height="Auto"
                                                                       Margin="10,-4,2,0"
                                                                       VerticalAlignment="Bottom"
                                                                       FontFamily="Segoe UI Semibold"
                                                                       FontSize="13.333"
                                                                       Foreground="{DynamicResource TweetDefaultSubTextBrush}"
                                                                       RenderTransformOrigin="0.5,0.5"
                                                                       Text="{Binding InReplyToUserScreenName,
                                                                                      FallbackValue=user,
                                                                                      Mode=OneWay}"
                                                                       TextWrapping="NoWrap" />
                                                            <TextBlock Height="Auto"
                                                                       Margin="3,-4,3,0"
                                                                       VerticalAlignment="Bottom"
                                                                       FontFamily="Segoe UI Semilight"
                                                                       FontSize="12.667"
                                                                       Foreground="{DynamicResource TweetDefaultSubTextBrush}"
                                                                       Text="{Binding InReplyToUserName,
                                                                                      FallbackValue=name,
                                                                                      Mode=OneWay}"
                                                                       TextWrapping="NoWrap" />
                                                        </DockPanel>
                                                        <TextBlock Margin="10,0"
                                                                   Foreground="{DynamicResource TweetDefaultSubTextBrush}"
                                                                   Text="{Binding InReplyToBody,
                                                                                  Mode=OneWay}"
                                                                   TextWrapping="Wrap" />
                                                    </StackPanel>
                                                </Grid>
                                                <Grid Margin="7" Visibility="{Binding IsInReplyToAvailable, Converter={StaticResource BooleanToInvisibleConverter}}">
                                                    <TextBlock Foreground="{DynamicResource TweetDefaultSubTextBrush}" Text="{x:Static localize:MainAreaTimelineResources.TimelineErrorCouldNotReceiveInReplyTo}" />
                                                </Grid>
                                            </StackPanel>
                                            <Grid Margin="7" Visibility="{Binding IsInReplyToLoading, Converter={StaticResource BooleanToVisibleConverter}}">
                                                <metrocontrols:MetroProgressBar Height="9"
                                                                                HorizontalAlignment="Stretch"
                                                                                VerticalAlignment="Center"
                                                                                IsIndeterminate="True" />
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                    <Grid Grid.Row="1"
                                          Grid.Column="0"
                                          Width="Auto"
                                          Height="Auto"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="10" />
                                            <ColumnDefinition Width="38" />
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.RowSpan="1"
                                              Grid.Column="1"
                                              Grid.ColumnSpan="2"
                                              Width="48"
                                              Height="48"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Top"
                                              Background="#191BA1E2"
                                              UseLayoutRounding="True">
                                            <!--  user  -->
                                            <controls:LazyImage DecodePixelWidth="48"
                                                                RenderOptions.BitmapScalingMode="HighQuality"
                                                                UriSource="{Binding User.ProfileImageUriOptimized,
                                                                                    Mode=OneWay}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <ei:CallMethodAction MethodName="ShowUserProfile" TargetObject="{Binding}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </controls:LazyImage>
                                            <!--  retweeter  -->
                                            <controls:LazyImage Width="24"
                                                                Height="24"
                                                                Margin="28,28,-4,-4"
                                                                DecodePixelWidth="24"
                                                                RenderOptions.BitmapScalingMode="HighQuality"
                                                                UriSource="{Binding Retweeter.ProfileImageUriOptimized,
                                                                                    Mode=OneWay}"
                                                                Visibility="{Binding IsRetweet,
                                                                                     Converter={StaticResource BooleanToVisibleConverter}}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <ei:CallMethodAction MethodName="ShowRetweeterProfile" TargetObject="{Binding}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </controls:LazyImage>
                                            <!--  message recipient  -->
                                            <controls:LazyImage Width="24"
                                                                Height="24"
                                                                Margin="28,28,-4,-4"
                                                                DecodePixelWidth="24"
                                                                RenderOptions.BitmapScalingMode="HighQuality"
                                                                UriSource="{Binding Recipient.ProfileImageUriOptimized,
                                                                                    Mode=OneWay}"
                                                                Visibility="{Binding IsDirectMessage,
                                                                                     Converter={StaticResource BooleanToVisibleConverter}}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <ei:CallMethodAction MethodName="ShowRecipientProfile" TargetObject="{Binding}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </controls:LazyImage>
                                        </Grid>
                                        <Border x:Name="CheckBoxBorder"
                                                Grid.Column="0"
                                                Width="0"
                                                Margin="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Background="{x:Null}"
                                                IsHitTestVisible="False"
                                                Visibility="Collapsed">
                                            <Viewbox x:Name="viewbox"
                                                     Width="18"
                                                     Height="18"
                                                     Margin="-2,0,6,0"
                                                     Stretch="Fill">
                                                <CheckBox x:Name="checkBox"
                                                          Width="16"
                                                          Height="16"
                                                          VerticalContentAlignment="Center"
                                                          Content=""
                                                          Focusable="False"
                                                          IsChecked="{Binding IsSelected,
                                                                              Mode=TwoWay}"
                                                          Padding="0" />
                                            </Viewbox>
                                        </Border>
                                        <Border x:Name="ClickerBorder"
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                Width="Auto"
                                                Height="Auto"
                                                Margin="-8,-10,0,-10"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                Background="Transparent">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                    <ei:CallMethodAction MethodName="ToggleSelect" TargetObject="{Binding Mode=OneTime}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Border>
                                    </Grid>
                                    <StackPanel Grid.Row="1"
                                                Grid.Column="1"
                                                Orientation="Vertical">
                                        <DockPanel Width="Auto"
                                                   Height="Auto"
                                                   Margin="0,-2,0,3"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Stretch"
                                                   LastChildFill="False">
                                            <TextBlock x:Name="ScreenNameText"
                                                       Height="Auto"
                                                       Margin="10,-4,2,0"
                                                       VerticalAlignment="Bottom"
                                                       Cursor="Hand"
                                                       FontFamily="Segoe UI Semibold"
                                                       FontSize="13.333"
                                                       Foreground="{DynamicResource KeyTextBrush}"
                                                       RenderTransformOrigin="0.5,0.5"
                                                       Text="{Binding User.ScreenName,
                                                                      FallbackValue=uSeR,
                                                                      Mode=OneTime}"
                                                       TextWrapping="NoWrap">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <ei:CallMethodAction MethodName="ShowUserProfile" TargetObject="{Binding}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBlock>
                                            <TextBlock Height="Auto"
                                                       Margin="3,-4,3,0"
                                                       VerticalAlignment="Bottom"
                                                       FontFamily="Segoe UI Semilight"
                                                       FontSize="12.667"
                                                       Foreground="{DynamicResource SubTextBrush}"
                                                       IsHitTestVisible="False"
                                                       Text="{Binding User.Name,
                                                                      FallbackValue=name,
                                                                      Mode=OneTime}"
                                                       TextWrapping="NoWrap" />
                                            <StackPanel x:Name="ViaPanel"
                                                        Width="Auto"
                                                        Margin="0,0,8,0"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Center"
                                                        DockPanel.Dock="Right"
                                                        Orientation="Horizontal"
                                                        Visibility="{Binding IsSourceVisible,
                                                                             Mode=OneTime,
                                                                             Converter={StaticResource BooleanToVisibleConverter}}">
                                                <TextBlock Margin="1,-1,1,0"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Center"
                                                           FontFamily="Segoe UI Semilight"
                                                           FontSize="12"
                                                           Foreground="{DynamicResource SubTextBrush}"
                                                           IsHitTestVisible="False"
                                                           Text="via "
                                                           TextWrapping="NoWrap" />
                                                <TextBlock Margin="1,-1,1,0"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Center"
                                                           FontFamily="Segoe UI Semilight"
                                                           FontSize="12"
                                                           Foreground="{DynamicResource SubTextBrush}"
                                                           IsHitTestVisible="False"
                                                           Text="{Binding SourceText,
                                                                          Mode=OneTime}"
                                                           TextWrapping="NoWrap"
                                                           Visibility="{Binding IsSourceIsLink,
                                                                                Mode=OneTime,
                                                                                Converter={StaticResource BooleanToInvisibleConverter}}" />
                                                <TextBlock Margin="1,-1,1,0"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Center"
                                                           Cursor="Hand"
                                                           FontFamily="Segoe UI Semilight"
                                                           FontSize="12"
                                                           Foreground="{DynamicResource SubTextBrush}"
                                                           Text="{Binding SourceText,
                                                                          Mode=OneTime}"
                                                           TextWrapping="NoWrap"
                                                           Visibility="{Binding IsSourceIsLink,
                                                                                Mode=OneTime,
                                                                                Converter={StaticResource BooleanToVisibleConverter}}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseLeftButtonDown">
                                                            <ei:CallMethodAction MethodName="OpenSourceLink" TargetObject="{Binding Mode=OneTime}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </TextBlock>

                                            </StackPanel>
                                        </DockPanel>
                                        <Grid Height="Auto" Margin="10,3,2,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Name="BodyText"
                                                       VerticalAlignment="Top"
                                                       TextWrapping="Wrap"
                                                       helpers:TextBlockStylizer.ForegroundBrush="{DynamicResource TweetForegroundBrush}"
                                                       helpers:TextBlockStylizer.HyperlinkBrush="{DynamicResource HyperlinkTextBrush}"
                                                       helpers:TextBlockStylizer.LinkNavigationCommand="{Binding OpenLinkCommand,
                                                                                                                 Mode=OneTime}"
                                                       helpers:TextBlockStylizer.TwitterStatus="{Binding Status,
                                                                                                         Mode=OneTime}">
                                                <i:Interaction.Behaviors>
                                                    <behaviors:TextBlockDragSelectBehavior ForegroundBrush="{DynamicResource BaseColorForegroundBrush}"
                                                                                           HighlightBrush="{DynamicResource GlobalKeyBrush}"
                                                                                           HighlightForegroundBrush="{DynamicResource BaseColorBackgroundBrush}"
                                                                                           SelectContextMenu="{StaticResource TextContextMenu}"
                                                                                           SelectedText="{Binding SelectedText,
                                                                                                                  Mode=OneWayToSource}" />
                                                </i:Interaction.Behaviors>
                                            </TextBlock>
                                            <Border Grid.Column="1"
                                                    Width="60"
                                                    Height="60"
                                                    Margin="8,0"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top"
                                                    Background="#80808080"
                                                    BorderBrush="{DynamicResource BaseColorForegroundBrush}"
                                                    BorderThickness="1"
                                                    Cursor="Hand"
                                                    Visibility="{Binding IsThumbnailAvailable,
                                                                         Mode=OneWay,
                                                                         Converter={StaticResource BooleanToVisibleConverter}}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <ei:CallMethodAction MethodName="OpenImage" TargetObject="{Binding ThumbnailImage, Mode=OneWay}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <controls:LazyImage Cursor="Hand"
                                                                    DecodePixelHeight="60"
                                                                    RenderOptions.BitmapScalingMode="HighQuality"
                                                                    Stretch="UniformToFill"
                                                                    UriSource="{Binding Path=ThumbnailImage.DisplayUri,
                                                                                        Mode=OneWay}" />
                                            </Border>
                                        </Grid>
                                        <ItemsControl Margin="2,4,8,0"
                                                      ItemsSource="{Binding Images}"
                                                      Visibility="{Binding IsThumbnailsAvailable,
                                                                           Converter={StaticResource BooleanToVisibleConverter}}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel Orientation="Horizontal" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type statuses:ThumbnailImageViewModel}">
                                                    <Border Width="60"
                                                            Height="60"
                                                            Margin="8,8,0,0"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Top"
                                                            Background="#80808080"
                                                            BorderBrush="{DynamicResource BaseColorForegroundBrush}"
                                                            BorderThickness="1"
                                                            Cursor="Hand">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                                <ei:CallMethodAction MethodName="OpenImage" TargetObject="{Binding Mode=OneTime}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                        <controls:LazyImage Cursor="Hand"
                                                                            DecodePixelHeight="60"
                                                                            RenderOptions.BitmapScalingMode="HighQuality"
                                                                            Stretch="UniformToFill"
                                                                            UriSource="{Binding DisplayUri,
                                                                                                Mode=OneWay}" />
                                                    </Border>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                        <Grid Margin="8,5,8,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock x:Name="LongTime"
                                                       Grid.Column="0"
                                                       Height="Auto"
                                                       Margin="2,2,4,0"
                                                       VerticalAlignment="Top"
                                                       Cursor="Hand"
                                                       FontFamily="Segoe UI Semilight"
                                                       FontSize="10.667"
                                                       Foreground="{DynamicResource SubTextBrush}"
                                                       Text="{Binding CreatedAt,
                                                                      Mode=OneTime,
                                                                      FallbackValue=0:00:00 - 0 Nil \'00,
                                                                      StringFormat=H:mm:ss - d MMM \\\'yy}"
                                                       TextWrapping="NoWrap">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <ei:CallMethodAction MethodName="OpenWeb" TargetObject="{Binding Mode=OneTime}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBlock>
                                            <StackPanel x:Name="CommandButtonRootPanel"
                                                        Grid.Column="1"
                                                        Height="21"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Center"
                                                        Orientation="Horizontal">
                                                <Button x:Name="FavAndRetweetButton"
                                                        Width="32"
                                                        Height="22"
                                                        Margin="0,-2"
                                                        ToolTip="{x:Static localize:MainAreaTimelineResources.TimelineCmdFavoriteAndRetweet}"
                                                        Visibility="{Binding CanFavoriteAndRetweet,
                                                                             Mode=OneWay,
                                                                             Converter={StaticResource BooleanToVisibleConverter}}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource MetroSimpleFlatButton}" TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="{DynamicResource FavAndRtBackground}" />
                                                            <Setter Property="Foreground" Value="{DynamicResource FavAndRtForeground}" />
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource FavAndRtHoveringBackground}" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource FavAndRtHoveringForeground}" />
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource FavAndRtPressedBackground}" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource FavAndRtPressedForeground}" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <ei:CallMethodAction MethodName="FavoriteAndRetweetImmediate" TargetObject="{Binding Mode=OneTime}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <Path Width="14.5"
                                                          Height="17"
                                                          Margin="-2"
                                                          Data="F1 M 753.421,588.661L 755.996,588.661L 756.841,586.293L 757.687,588.661L 757.768,588.661C 758.324,588.451 758.927,588.337 759.556,588.337C 761.011,588.337 762.323,588.949 763.248,589.929L 763.248,587.414L 764.633,588.799L 764.633,592.491L 760.94,592.491L 759.556,591.106L 762.136,591.106C 761.502,590.398 760.581,589.952 759.556,589.952C 759.052,589.952 758.573,590.06 758.14,590.254L 759.078,592.608L 756.841,591.292L 756.799,591.32C 756.445,591.786 756.206,592.344 756.125,592.952L 754.5,592.952C 754.592,591.925 754.991,590.986 755.603,590.227L 753.421,588.661 Z M 759.556,596.875C 761.311,596.875 762.761,595.569 762.987,593.875L 764.612,593.875C 764.379,596.463 762.204,598.491 759.556,598.491C 758.101,598.491 756.789,597.879 755.864,596.898L 755.864,599.414L 754.479,598.029L 754.479,594.337L 758.171,594.337L 759.556,595.722L 756.976,595.722C 757.61,596.43 758.531,596.875 759.556,596.875 Z "
                                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                        AncestorType=Button},
                                                                         Path=Foreground}"
                                                          Stretch="Fill" />
                                                </Button>
                                                <Button Width="46"
                                                        Height="22"
                                                        Margin="0,-2"
                                                        ToolTip="{x:Static localize:MainAreaTimelineResources.TimelineCmdFavoriteSelect}"
                                                        Visibility="{Binding CanFavorite,
                                                                             Mode=OneTime,
                                                                             Converter={StaticResource BooleanToVisibleConverter}}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource MetroSimpleFlatButton}" TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="{DynamicResource FavoriteBackground}" />
                                                            <Setter Property="Foreground" Value="{DynamicResource FavoriteForeground}" />
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource FavoriteHoveringBackground}" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource FavoriteHoveringForeground}" />
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource FavoritePressedBackground}" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource FavoritePressedForeground}" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <ei:CallMethodAction MethodName="ToggleFavorite" TargetObject="{Binding Mode=OneTime}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <Path Width="5"
                                                          Height="4"
                                                          Margin="19,1,-13,0"
                                                          Data="F1 M 806.479,594.43L 808.229,591.399L 804.729,591.399L 806.479,594.43 Z "
                                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                        AncestorType=Button},
                                                                         Path=Foreground}"
                                                          Stretch="Fill" />
                                                </Button>
                                                <Grid Width="32"
                                                      Height="22"
                                                      Margin="-60,-2,0,-2"
                                                      Visibility="{Binding CanFavorite,
                                                                           Mode=OneTime,
                                                                           Converter={StaticResource BooleanToVisibleConverter}}">
                                                    <Button Width="32"
                                                            Height="22"
                                                            Margin="0,-2,0,-2"
                                                            ToolTip="{x:Static localize:MainAreaTimelineResources.TimelineCmdFavorite}"
                                                            Visibility="{Binding IsFavorited,
                                                                                 Mode=OneWay,
                                                                                 Converter={StaticResource BooleanToInvisibleConverter}}">
                                                        <Button.Style>
                                                            <Style BasedOn="{StaticResource MetroSimpleFlatButton}" TargetType="{x:Type Button}">
                                                                <Setter Property="Background" Value="{DynamicResource FavoriteBackground}" />
                                                                <Setter Property="Foreground" Value="{DynamicResource FavoriteForeground}" />
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" Value="{DynamicResource FavoriteHoveringBackground}" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource FavoriteHoveringForeground}" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" Value="{DynamicResource FavoritePressedBackground}" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource FavoritePressedForeground}" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Click">
                                                                <ei:CallMethodAction MethodName="ToggleFavoriteImmediate" TargetObject="{Binding Mode=OneTime}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                        <Path x:Name="FavoriteStar"
                                                              Width="16"
                                                              Height="14.77"
                                                              Margin="-2"
                                                              Data="F1 M 771.886,590.845L 776.402,590.845L 777.886,586.691L 779.369,590.845L 783.886,590.845L 780.124,593.539L 781.809,597.768L 777.886,595.46L 774.424,597.768L 775.728,593.602L 771.886,590.845 Z "
                                                              Fill="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                            AncestorType=Button},
                                                                             Path=Foreground}"
                                                              Stretch="Fill" />
                                                    </Button>
                                                    <Button Width="32"
                                                            Height="22"
                                                            Margin="0,-2,0,-2"
                                                            ToolTip="{x:Static localize:MainAreaTimelineResources.TimelineCmdUnfavorite}"
                                                            Visibility="{Binding IsFavorited,
                                                                                 Mode=OneWay,
                                                                                 Converter={StaticResource BooleanToVisibleConverter}}">
                                                        <Button.Style>
                                                            <Style BasedOn="{StaticResource MetroSimpleFlatButton}" TargetType="{x:Type Button}">
                                                                <Setter Property="Background" Value="{DynamicResource ColoredFavoriteBackground}" />
                                                                <Setter Property="Foreground" Value="{DynamicResource ColoredFavoriteForeground}" />
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" Value="{DynamicResource ColoredFavoriteHoveringBackground}" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource ColoredFavoriteHoveringForeground}" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" Value="{DynamicResource ColoredFavoritePressedBackground}" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource ColoredFavoritePressedForeground}" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Click">
                                                                <ei:CallMethodAction MethodName="ToggleFavoriteImmediate" TargetObject="{Binding Mode=OneTime}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                        <Path x:Name="UnfavoriteStar"
                                                              Width="16"
                                                              Height="14.77"
                                                              Margin="-2"
                                                              Data="F1 M 771.886,590.845L 776.402,590.845L 777.886,586.691L 779.369,590.845L 783.886,590.845L 780.124,593.539L 781.809,597.768L 777.886,595.46L 774.424,597.768L 775.728,593.602L 771.886,590.845 Z "
                                                              Fill="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                            AncestorType=Button},
                                                                             Path=Foreground}"
                                                              Stretch="Fill" />
                                                    </Button>
                                                </Grid>
                                                <Button Width="46"
                                                        Height="22"
                                                        Margin="0,-2"
                                                        ToolTip="{x:Static localize:MainAreaTimelineResources.TimelineCmdRetweetSelect}"
                                                        Visibility="{Binding CanRetweet,
                                                                             Mode=OneTime,
                                                                             Converter={StaticResource BooleanToVisibleConverter}}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource MetroSimpleFlatButton}" TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="{DynamicResource RetweetBackground}" />
                                                            <Setter Property="Foreground" Value="{DynamicResource RetweetForeground}" />
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource RetweetHoveringBackground}" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource RetweetHoveringForeground}" />
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource RetweetPressedBackground}" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource RetweetPressedForeground}" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <ei:CallMethodAction MethodName="ToggleRetweet" TargetObject="{Binding Mode=OneTime}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <Path Width="5"
                                                          Height="4"
                                                          Margin="19,1,-13,0"
                                                          Data="F1 M 806.479,594.43L 808.229,591.399L 804.729,591.399L 806.479,594.43 Z "
                                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                        AncestorType=Button},
                                                                         Path=Foreground}"
                                                          Stretch="Fill" />
                                                </Button>
                                                <Grid Width="32"
                                                      Height="22"
                                                      Margin="-60,-2,0,-2"
                                                      Visibility="{Binding CanRetweet,
                                                                           Mode=OneTime,
                                                                           Converter={StaticResource BooleanToVisibleConverter}}">
                                                    <Button Width="32"
                                                            Height="22"
                                                            Margin="0,-2,0,-2"
                                                            ToolTip="{x:Static localize:MainAreaTimelineResources.TimelineCmdRetweet}"
                                                            Visibility="{Binding IsRetweeted,
                                                                                 Mode=OneWay,
                                                                                 Converter={StaticResource BooleanToInvisibleConverter}}">
                                                        <Button.Style>
                                                            <Style BasedOn="{StaticResource MetroSimpleFlatButton}" TargetType="{x:Type Button}">
                                                                <Setter Property="Background" Value="{DynamicResource RetweetBackground}" />
                                                                <Setter Property="Foreground" Value="{DynamicResource RetweetForeground}" />
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" Value="{DynamicResource RetweetHoveringBackground}" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource RetweetHoveringForeground}" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" Value="{DynamicResource RetweetPressedBackground}" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource RetweetPressedForeground}" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Click">
                                                                <ei:CallMethodAction MethodName="ToggleRetweetImmediate" TargetObject="{Binding Mode=OneTime}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                        <Path x:Name="RetweetCircle"
                                                              Width="13.54"
                                                              Height="16"
                                                              Margin="-2"
                                                              Data="F1 M 797.334,587.09C 798.788,587.09 800.1,587.702 801.026,588.682L 801.026,586.167L 802.41,587.551L 802.41,591.244L 798.718,591.244L 797.334,589.859L 799.914,589.859C 799.28,589.151 798.359,588.705 797.334,588.705C 795.578,588.705 794.128,590.012 793.903,591.705L 792.277,591.705C 792.511,589.117 794.685,587.09 797.334,587.09 Z M 797.334,595.628C 799.089,595.628 800.539,594.322 800.765,592.628L 802.39,592.628C 802.157,595.216 799.982,597.244 797.334,597.244C 795.879,597.244 794.567,596.632 793.641,595.651L 793.641,598.167L 792.257,596.782L 792.257,593.09L 795.949,593.09L 797.334,594.474L 794.753,594.474C 795.387,595.182 796.308,595.628 797.334,595.628 Z "
                                                              Fill="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                            AncestorType=Button},
                                                                             Path=Foreground}"
                                                              Stretch="Fill" />
                                                    </Button>
                                                    <Button Width="32"
                                                            Height="22"
                                                            Margin="0,-2,0,-2"
                                                            ToolTip="{x:Static localize:MainAreaTimelineResources.TimelineCmdUnretweet}"
                                                            Visibility="{Binding IsRetweeted,
                                                                                 Mode=OneWay,
                                                                                 Converter={StaticResource BooleanToVisibleConverter}}">
                                                        <Button.Style>
                                                            <Style BasedOn="{StaticResource MetroSimpleFlatButton}" TargetType="{x:Type Button}">
                                                                <Setter Property="Background" Value="{DynamicResource ColoredRetweetBackground}" />
                                                                <Setter Property="Foreground" Value="{DynamicResource ColoredRetweetForeground}" />
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" Value="{DynamicResource ColoredRetweetHoveringBackground}" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource ColoredRetweetHoveringForeground}" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" Value="{DynamicResource ColoredRetweetPressedBackground}" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource ColoredRetweetPressedForeground}" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Click">
                                                                <ei:CallMethodAction MethodName="ToggleRetweetImmediate" TargetObject="{Binding Mode=OneTime}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                        <Path x:Name="UnretweetCircle"
                                                              Width="13.54"
                                                              Height="16"
                                                              Margin="-2"
                                                              Data="F1 M 797.334,587.09C 798.788,587.09 800.1,587.702 801.026,588.682L 801.026,586.167L 802.41,587.551L 802.41,591.244L 798.718,591.244L 797.334,589.859L 799.914,589.859C 799.28,589.151 798.359,588.705 797.334,588.705C 795.578,588.705 794.128,590.012 793.903,591.705L 792.277,591.705C 792.511,589.117 794.685,587.09 797.334,587.09 Z M 797.334,595.628C 799.089,595.628 800.539,594.322 800.765,592.628L 802.39,592.628C 802.157,595.216 799.982,597.244 797.334,597.244C 795.879,597.244 794.567,596.632 793.641,595.651L 793.641,598.167L 792.257,596.782L 792.257,593.09L 795.949,593.09L 797.334,594.474L 794.753,594.474C 795.387,595.182 796.308,595.628 797.334,595.628 Z "
                                                              Fill="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                            AncestorType=Button},
                                                                             Path=Foreground}"
                                                              Stretch="Fill" />
                                                    </Button>
                                                </Grid>
                                                <Button Width="32"
                                                        Height="22"
                                                        Margin="0,-2"
                                                        ToolTip="{x:Static localize:MainAreaTimelineResources.TimelineCmdReply}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource MetroSimpleFlatButton}" TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="{DynamicResource MentionBackground}" />
                                                            <Setter Property="Foreground" Value="{DynamicResource MentionForeground}" />
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource MentionHoveringBackground}" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource MentionHoveringForeground}" />
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource MentionPressedBackground}" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource MentionPressedForeground}" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <ei:CallMethodAction MethodName="SendReplyOrDirectMessage" TargetObject="{Binding Mode=OneTime}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <Path Width="12"
                                                          Height="13"
                                                          Margin="-2"
                                                          Data="F1 M 825.467,595.138L 826.267,597.937L 823.067,595.138L 821.867,595.138L 821.867,587.937L 831.467,587.937L 831.467,595.138L 825.467,595.138 Z "
                                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                        AncestorType=Button},
                                                                         Path=Foreground}"
                                                          Stretch="Fill" />
                                                </Button>
                                                <Button Width="32"
                                                        Height="22"
                                                        Margin="0,-2"
                                                        ToolTip="{x:Static localize:MainAreaTimelineResources.TimelineCmdDelete}"
                                                        Visibility="{Binding CanDelete,
                                                                             Mode=OneWay,
                                                                             Converter={StaticResource BooleanToVisibleConverter}}">
                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource MetroSimpleFlatButton}" TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="{DynamicResource DeleteBackground}" />
                                                            <Setter Property="Foreground" Value="{DynamicResource DeleteForeground}" />
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource DeleteHoveringBackground}" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource DeleteHoveringForeground}" />
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Background" Value="{DynamicResource DeletePressedBackground}" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource DeletePressedForeground}" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <ei:CallMethodAction MethodName="ConfirmDelete" TargetObject="{Binding Mode=OneTime}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <Path Width="10.89"
                                                          Height="14"
                                                          Margin="-2"
                                                          Data="F1 M 834.964,587.472L 842.787,587.472C 843.057,587.472 843.153,588.572 843.153,588.572L 834.598,588.572C 834.598,588.572 834.694,587.472 834.964,587.472 Z M 838.142,586.25L 839.609,586.25C 839.744,586.25 840.098,586.604 840.098,586.739C 840.098,586.874 839.744,587.228 839.609,587.228L 838.142,587.228C 838.007,587.228 837.653,586.874 837.653,586.739C 837.653,586.604 838.007,586.25 838.142,586.25 Z M 835.698,588.939L 842.053,588.939C 842.323,588.939 842.542,589.158 842.542,589.428L 842.053,596.761C 842.053,597.031 841.834,597.25 841.564,597.25L 836.187,597.25C 835.917,597.25 835.698,597.031 835.698,596.761L 835.209,589.428C 835.209,589.158 835.428,588.939 835.698,588.939 Z M 836.431,589.917L 836.553,596.272L 837.409,596.272L 837.287,589.917L 836.431,589.917 Z M 838.387,589.917L 838.387,596.272L 839.364,596.272L 839.364,589.917L 838.387,589.917 Z M 840.464,589.917L 840.342,596.272L 841.198,596.272L 841.32,589.917L 840.464,589.917 Z "
                                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                        AncestorType=Button},
                                                                         Path=Foreground}"
                                                          Stretch="Fill" />
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                        <StackPanel x:Name="ActionQuickView"
                                                    Height="Auto"
                                                    Margin="7,0"
                                                    Orientation="Horizontal"
                                                    Visibility="Visible">
                                            <StackPanel.LayoutTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </StackPanel.LayoutTransform>
                                            <StackPanel Width="Auto"
                                                        Margin="0,7,0,0"
                                                        Orientation="Horizontal"
                                                        Visibility="{Binding IsFavoritedUserExists,
                                                                             Mode=OneWay,
                                                                             Converter={StaticResource BooleanToVisibleConverter}}">
                                                <Path Width="Auto"
                                                      Height="11"
                                                      Margin="2,0"
                                                      VerticalAlignment="Center"
                                                      Data="F1 M 17.5,22.5L 22.3928,22.5L 24,18L 25.6071,22.5L 30.5,22.5L 26.4252,25.4193L 28.25,30L 24,27.5L 20.25,30L 21.6625,25.4875L 17.5,22.5 Z "
                                                      Fill="{DynamicResource FavoriteCounter}"
                                                      Stretch="Fill" />
                                                <TextBlock Margin="1,-1,5,0"
                                                           VerticalAlignment="Center"
                                                           FontFamily="Segoe UI Semilight"
                                                           Foreground="{DynamicResource FavoriteCounter}"
                                                           IsHitTestVisible="False"
                                                           Text="{Binding FavoriteCount,
                                                                          Mode=OneWay,
                                                                          FallbackValue=00}"
                                                           TextWrapping="Wrap" />
                                            </StackPanel>
                                            <StackPanel Width="Auto"
                                                        Margin="0,7,0,0"
                                                        Orientation="Horizontal"
                                                        Visibility="{Binding IsRetweetedUserExists,
                                                                             Mode=OneWay,
                                                                             Converter={StaticResource BooleanToVisibleConverter}}">
                                                <Path Width="Auto"
                                                      Height="12"
                                                      Margin="2,0"
                                                      VerticalAlignment="Center"
                                                      Data="F1 M 24,18.9231C 25.4548,18.9231 26.7667,19.535 27.6923,20.5154L 27.6923,18L 29.0769,19.3846L 29.0769,23.0769L 25.3846,23.0769L 24,21.6923L 26.5801,21.6923C 25.9463,20.9841 25.0252,20.5385 24,20.5385C 22.2447,20.5385 20.7946,21.8449 20.569,23.5385L 18.9438,23.5385C 19.177,20.9508 21.3517,18.9231 24,18.9231 Z M 24,27.4615C 25.7553,27.4615 27.2054,26.1551 27.431,24.4615L 29.0562,24.4615C 28.823,27.0492 26.6483,29.0769 24,29.0769C 22.5452,29.0769 21.2333,28.465 20.3077,27.4846L 20.3077,30L 18.9231,28.6154L 18.9231,24.9231L 22.6154,24.9231L 24,26.3077L 21.4199,26.3077C 22.0537,27.0159 22.9748,27.4615 24,27.4615 Z "
                                                      Fill="{DynamicResource RetweetCounter}"
                                                      Stretch="Fill" />
                                                <TextBlock Margin="1,-1,0,0"
                                                           VerticalAlignment="Center"
                                                           FontFamily="Segoe UI Semilight"
                                                           Foreground="{DynamicResource RetweetCounter}"
                                                           IsHitTestVisible="False"
                                                           Text="{Binding RetweetCount,
                                                                          Mode=OneWay,
                                                                          FallbackValue=00}"
                                                           TextWrapping="Wrap" />
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel x:Name="ActionDetailView"
                                                    Margin="7,0"
                                                    Orientation="Vertical"
                                                    Visibility="Collapsed">
                                            <StackPanel.LayoutTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </StackPanel.LayoutTransform>
                                            <DockPanel Height="Auto"
                                                       Margin="0,7,0,0"
                                                       LastChildFill="True"
                                                       Visibility="{Binding IsFavoritedUserExists,
                                                                            Mode=OneWay,
                                                                            Converter={StaticResource BooleanToVisibleConverter}}">
                                                <Path Width="12"
                                                      Height="11"
                                                      Margin="2,0"
                                                      VerticalAlignment="Center"
                                                      Data="F1 M 17.5,22.5L 22.3928,22.5L 24,18L 25.6071,22.5L 30.5,22.5L 26.4252,25.4193L 28.25,30L 24,27.5L 20.25,30L 21.6625,25.4875L 17.5,22.5 Z "
                                                      Fill="{DynamicResource FavoriteCounter}"
                                                      Stretch="Fill" />
                                                <TextBlock Margin="1,-1,5,0"
                                                           VerticalAlignment="Center"
                                                           FontFamily="Segoe UI Semilight"
                                                           Foreground="{DynamicResource FavoriteCounter}"
                                                           IsHitTestVisible="False"
                                                           Text="{Binding FavoriteCount,
                                                                          Mode=OneWay,
                                                                          FallbackValue=00}"
                                                           TextWrapping="Wrap" />
                                                <ItemsControl Height="Auto"
                                                              FocusVisualStyle="{x:Null}"
                                                              Focusable="False"
                                                              ItemTemplate="{StaticResource UserItemTemplate}"
                                                              ItemsSource="{Binding FavoritedUsers,
                                                                                    Mode=OneTime}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel />
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                </ItemsControl>
                                            </DockPanel>
                                            <DockPanel Height="Auto"
                                                       Margin="0,7,0,0"
                                                       LastChildFill="True"
                                                       Visibility="{Binding IsRetweetedUserExists,
                                                                            Mode=OneWay,
                                                                            Converter={StaticResource BooleanToVisibleConverter}}">
                                                <Path Width="10"
                                                      Height="12"
                                                      Margin="3,1"
                                                      VerticalAlignment="Center"
                                                      Data="F1 M 24,18.9231C 25.4548,18.9231 26.7667,19.535 27.6923,20.5154L 27.6923,18L 29.0769,19.3846L 29.0769,23.0769L 25.3846,23.0769L 24,21.6923L 26.5801,21.6923C 25.9463,20.9841 25.0252,20.5385 24,20.5385C 22.2447,20.5385 20.7946,21.8449 20.569,23.5385L 18.9438,23.5385C 19.177,20.9508 21.3517,18.9231 24,18.9231 Z M 24,27.4615C 25.7553,27.4615 27.2054,26.1551 27.431,24.4615L 29.0562,24.4615C 28.823,27.0492 26.6483,29.0769 24,29.0769C 22.5452,29.0769 21.2333,28.465 20.3077,27.4846L 20.3077,30L 18.9231,28.6154L 18.9231,24.9231L 22.6154,24.9231L 24,26.3077L 21.4199,26.3077C 22.0537,27.0159 22.9748,27.4615 24,27.4615 Z "
                                                      Fill="{DynamicResource RetweetCounter}"
                                                      Stretch="Fill" />
                                                <TextBlock Margin="1,-2,5,0"
                                                           VerticalAlignment="Center"
                                                           FontFamily="Segoe UI Semilight"
                                                           Foreground="{DynamicResource RetweetCounter}"
                                                           IsHitTestVisible="False"
                                                           Text="{Binding RetweetCount,
                                                                          Mode=OneWay,
                                                                          FallbackValue=00}"
                                                           TextWrapping="Wrap" />
                                                <ItemsControl Height="Auto"
                                                              FocusVisualStyle="{x:Null}"
                                                              Focusable="False"
                                                              ItemTemplate="{StaticResource UserItemTemplate}"
                                                              ItemsSource="{Binding RetweetedUsers,
                                                                                    Mode=OneTime}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel />
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                </ItemsControl>
                                            </DockPanel>
                                        </StackPanel>
                                        <DockPanel Margin="7,5,7,-1"
                                                   Background="Transparent"
                                                   Visibility="{Binding IsRetweet,
                                                                        Mode=OneTime,
                                                                        Converter={StaticResource BooleanToVisibleConverter}}">
                                            <Path Width="10"
                                                  Height="12"
                                                  Margin="3,1"
                                                  Data="F1 M 24,18.9231C 25.4548,18.9231 26.7667,19.535 27.6923,20.5154L 27.6923,18L 29.0769,19.3846L 29.0769,23.0769L 25.3846,23.0769L 24,21.6923L 26.5801,21.6923C 25.9463,20.9841 25.0252,20.5385 24,20.5385C 22.2447,20.5385 20.7946,21.8449 20.569,23.5385L 18.9438,23.5385C 19.177,20.9508 21.3517,18.9231 24,18.9231 Z M 24,27.4615C 25.7553,27.4615 27.2054,26.1551 27.431,24.4615L 29.0562,24.4615C 28.823,27.0492 26.6483,29.0769 24,29.0769C 22.5452,29.0769 21.2333,28.465 20.3077,27.4846L 20.3077,30L 18.9231,28.6154L 18.9231,24.9231L 22.6154,24.9231L 24,26.3077L 21.4199,26.3077C 22.0537,27.0159 22.9748,27.4615 24,27.4615 Z "
                                                  Fill="{DynamicResource RetweetMarker}"
                                                  Stretch="Fill" />
                                            <TextBlock Margin="1,-2,0,0"
                                                       HorizontalAlignment="Left"
                                                       VerticalAlignment="Center"
                                                       Cursor="Hand"
                                                       FontFamily="Segoe UI Semilight"
                                                       FontSize="12"
                                                       Foreground="{DynamicResource RetweetMarker}"
                                                       Text="{Binding Retweeter.ScreenName,
                                                                      Mode=OneTime,
                                                                      FallbackValue=user}"
                                                       TextWrapping="NoWrap">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <ei:CallMethodAction MethodName="ShowRetweeterProfile" TargetObject="{Binding}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBlock>
                                        </DockPanel>
                                        <DockPanel Margin="7,5,7,-1"
                                                   Background="Transparent"
                                                   Visibility="{Binding IsDirectMessage,
                                                                        Mode=OneTime,
                                                                        Converter={StaticResource BooleanToVisibleConverter}}">
                                            <Path Width="11"
                                                  Height="10"
                                                  Margin="3,1"
                                                  Data="F1 M 11.5,20.5834C 10.3333,16.25 13.6667,12.9167 16.5,12.4167C 19.3334,11.9167 21.6667,14.25 24,16.5833C 26.3334,14.25 28.6667,11.9167 31.5,12.4167C 34.3333,12.9167 37.6666,16.25 36.5,20.5833C 35.3333,24.9167 29.6667,30.25 24,35.5833C 18.3334,30.25 12.6667,24.9167 11.5,20.5834 Z "
                                                  Fill="{x:Null}"
                                                  Stretch="Fill"
                                                  Stroke="{DynamicResource KeyTextBrush}"
                                                  StrokeThickness="2" />
                                            <TextBlock Margin="1,-2,0,0"
                                                       HorizontalAlignment="Left"
                                                       VerticalAlignment="Center"
                                                       Cursor="Hand"
                                                       FontFamily="Segoe UI Semilight"
                                                       FontSize="12"
                                                       Foreground="{DynamicResource KeyTextBrush}"
                                                       TextWrapping="NoWrap">
                                                <Run Text="sent to" />
                                                <Run Text="{Binding Recipient.ScreenName, Mode=OneTime, FallbackValue=user}" />
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <ei:CallMethodAction MethodName="ShowRecipientProfile" TargetObject="{Binding}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBlock>
                                        </DockPanel>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Border>
                    </Border>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsMyself, Mode=OneWay}" Value="True">
                        <Setter TargetName="BaseGrid" Property="primitives:TimelineSwapResourcesBehavior.ResourceSet" Value="Myself" />
                        <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource TweetMyselfBackgroundBrush}" />
                        <Setter TargetName="SingleLineBorder" Property="Background" Value="{DynamicResource TweetMyselfBackgroundBrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsInReplyToMe, Mode=OneWay}" Value="True">
                        <Setter TargetName="BaseGrid" Property="primitives:TimelineSwapResourcesBehavior.ResourceSet" Value="Mention" />
                        <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource TweetMentionBackgroundBrush}" />
                        <Setter TargetName="SingleLineBorder" Property="Background" Value="{DynamicResource TweetMentionBackgroundBrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsDirectMessage, Mode=OneTime}" Value="True">
                        <Setter TargetName="BaseGrid" Property="primitives:TimelineSwapResourcesBehavior.ResourceSet" Value="Message" />
                        <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource TweetMessageBackgroundBrush}" />
                        <Setter TargetName="SingleLineBorder" Property="Background" Value="{DynamicResource TweetMessageBackgroundBrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsRetweet, Mode=OneTime}" Value="True">
                        <Setter TargetName="BaseGrid" Property="primitives:TimelineSwapResourcesBehavior.ResourceSet" Value="Retweet" />
                        <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource TweetRetweetBackgroundBrush}" />
                        <Setter TargetName="SingleLineBorder" Property="Background" Value="{DynamicResource TweetRetweetBackgroundBrush}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
            <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
            <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
            <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
            <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
            <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
            <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
            <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
            <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
            <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
            <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot" Background="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates" />
                                    <VisualStateGroup x:Name="FocusStates" />
                                    <VisualStateGroup x:Name="CheckStates" />
                                    <VisualStateGroup x:Name="ValidationStates" />
                                </VisualStateManager.VisualStateGroups>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder"
                                        Margin="1"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid x:Name="markGrid">
                                        <Path x:Name="optionMark"
                                              Margin="1"
                                              Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                              Fill="{StaticResource OptionMark.Static.Glyph}"
                                              Opacity="0"
                                              Stretch="None" />
                                        <Rectangle x:Name="indeterminateMark"
                                                   Margin="2"
                                                   Fill="{StaticResource OptionMark.Static.Glyph}"
                                                   Opacity="0" />
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter"
                                                  Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="Padding" Value="4,-1,0,0" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.MouseOver.Border}" />
                                    <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                    <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
                                    <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                    <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Pressed.Background}" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Pressed.Border}" />
                                    <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                    <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                    <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                                    <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <ei:DataTrigger Binding="{Binding IsStatusSelected}" Value="True">
            <ei:GoToStateAction StateName="Open" TargetObject="{Binding ElementName=TimelineRoot}" />
        </ei:DataTrigger>
        <ei:DataTrigger Binding="{Binding IsStatusSelected}" Value="False">
            <ei:GoToStateAction StateName="Close" TargetObject="{Binding ElementName=TimelineRoot}" />
        </ei:DataTrigger>
    </i:Interaction.Triggers>
    <DockPanel>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="StatusesActionBar">
                <VisualState x:Name="Close">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiOperationBlock" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiOperationBlock" Storyboard.TargetProperty="(FrameworkElement.Height)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="40">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Open">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiOperationBlock" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiOperationBlock" Storyboard.TargetProperty="(FrameworkElement.Height)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="40">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Border x:Name="LoadingBlock"
                VerticalAlignment="Top"
                DockPanel.Dock="Top"
                Visibility="{Binding IsLoading,
                                     Converter={StaticResource BooleanToVisibleConverter}}">
            <StackPanel Margin="4"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                <Viewbox Width="20" Height="20">
                    <metrocontrols:ProgressRing IsActive="{Binding IsLoading}" />
                </Viewbox>
                <TextBlock Margin="4"
                           VerticalAlignment="Center"
                           Text="loading..." />
            </StackPanel>
        </Border>
        <Border x:Name="MultiOperationBlock"
                Height="40"
                VerticalAlignment="Top"
                Background="Transparent"
                DockPanel.Dock="Bottom"
                Visibility="Collapsed">
            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                <Button Width="32"
                        Height="32"
                        Margin="12,4"
                        Template="{DynamicResource MetroBlackCircleButtonTemplate}"
                        ToolTip="{x:Static localize:MainAreaTimelineResources.TimelineCmdReplyAll}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="ReplySelecteds" TargetObject="{Binding Mode=OneWay}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Path Width="16"
                          Height="17"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="F1 M 21,32L 23,39L 15,32L 12,32L 12,14L 36,14L 36,32L 21,32 Z "
                          Fill="{DynamicResource BaseColorForegroundBrush}"
                          Stretch="Fill" />
                </Button>
                <Button Width="32"
                        Height="32"
                        Margin="12,4"
                        Template="{DynamicResource MetroBlackCircleButtonTemplate}"
                        ToolTip="{x:Static localize:MainAreaTimelineResources.TimelineCmdFavoriteAll}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="FavoriteSelecteds" TargetObject="{Binding Mode=OneWay}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Path Width="18"
                          Height="17"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="F1 M 19.1538,24.1539L 21.2308,24.1539L 21.2308,27.6154L 24.6923,27.6154L 24.6923,29.6923L 21.2308,29.6923L 21.2308,33.1539L 19.1538,33.1539L 19.1538,29.6923L 15.6923,29.6923L 15.6923,27.6154L 19.1538,27.6154L 19.1538,24.1539 Z M 15,22.0769L 21.7747,22.0769L 24,15.8462L 26.2253,22.0769L 33,22.0769L 27.358,26.119L 29.8846,32.4615L 25.3846,29.8145L 25.3846,26.9231L 21.9231,26.9231L 21.9231,23.4615L 18.4615,23.4616L 18.4615,24.5613L 15,22.0769 Z "
                          Fill="{DynamicResource BaseColorForegroundBrush}"
                          Stretch="Fill" />
                </Button>
                <Button Width="32"
                        Height="32"
                        Margin="12,4"
                        Template="{DynamicResource MetroBlackCircleButtonTemplate}"
                        ToolTip="{x:Static localize:MainAreaTimelineResources.TimelineCmdExtractAll}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="ExtractSelecteds" TargetObject="{Binding Mode=OneWay}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Path Width="16"
                          Height="16"
                          Margin="2,0,0,2"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="F1 M 27,15L 33,15L 33,21L 30.75,23.25L 30.75,19.125L 22.5,27.375L 20.625,25.5L 28.875,17.25L 24.75,17.25L 27,15 Z M 15,18L 26.25,18L 24,20.25L 17.25,20.25L 17.25,30.75L 27.75,30.75L 27.75,24L 30,21.75L 30,33L 15,33L 15,18 Z "
                          Fill="{DynamicResource BaseColorForegroundBrush}"
                          Stretch="Fill" />
                </Button>
                <Button Width="32"
                        Height="32"
                        Margin="12,4"
                        Template="{DynamicResource MetroBlackCircleButtonTemplate}"
                        ToolTip="{x:Static localize:MainAreaTimelineResources.TimelineCmdUnselectAll}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:CallMethodAction MethodName="DeselectAll" TargetObject="{Binding Mode=OneWay}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Path Width="14"
                          Height="14"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="F1 M 18.4,16L 24,21.6L 29.5999,16.0001L 31.9999,18.4001L 26.4,24L 32,29.6001L 29.6,32L 24,26.4L 18.3999,32L 16,29.6L 21.6,24L 16,18.4L 18.4,16 Z "
                          Fill="{DynamicResource BaseColorForegroundBrush}"
                          Stretch="Fill" />
                </Button>
            </StackPanel>
        </Border>
        <ItemsControl FocusVisualStyle="{x:Null}"
                      Focusable="True"
                      InputMethod.IsInputMethodEnabled="False"
                      ItemTemplate="{StaticResource StatusItemTemplate}"
                      ItemsSource="{Binding Timeline,
                                            Mode=OneWay}"
                      UseLayoutRounding="True"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.ScrollUnit="{Binding ScrollUnit}"
                      VirtualizingPanel.VirtualizationMode="Recycling">
            <i:Interaction.Triggers>
                <l:InteractionMessageTrigger Messenger="{Binding Messenger, Mode=OneTime}">
                    <mbehaviors:ScrollIntoViewInteractionMessageAction />
                </l:InteractionMessageTrigger>
                <l:InteractionMessageTrigger Messenger="{Binding Messenger, Mode=OneTime}">
                    <mbehaviors:TaskDialogInteractionMessageAction />
                </l:InteractionMessageTrigger>
                <l:InteractionMessageTrigger MessageKey="SetFocus" Messenger="{Binding Messenger, Mode=OneWay}">
                    <l:SetFocusAction />
                </l:InteractionMessageTrigger>
                <i:EventTrigger EventName="MouseDown">
                    <l:SetFocusAction />
                    <ei:CallMethodAction MethodName="GotFocus" TargetObject="{Binding}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.Template>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <ScrollViewer CanContentScroll="True"
                                  Focusable="False"
                                  Style="{StaticResource TouchScrollViewerStyle}"
                                  VerticalScrollBarVisibility="Visible">
                        <i:Interaction.Behaviors>
                            <behaviors:TimelineScrollHandlerBehavior />
                            <behaviors:TimelineTriggerBehavior IsMouseOver="{Binding IsMouseOver,
                                                                                     Mode=OneWayToSource}"
                                                               IsScrollOnBottom="{Binding IsScrollInBottom,
                                                                                          Mode=OneWayToSource}"
                                                               IsScrollOnTop="{Binding IsScrollOnTop,
                                                                                       Mode=OneWayToSource}" />
                            <behaviors:TimelineScrollLockerBehavior CurrentScrollUnit="{Binding ScrollUnit}"
                                                                    IsAnimationEnabled="{Binding IsAnimationEnabled,
                                                                                                 Mode=OneWay}"
                                                                    IsScrollLockEnabled="{Binding IsScrollLockEnabled,
                                                                                                  Mode=OneWay}"
                                                                    IsScrollLockOnlyScrolled="{Binding IsScrollLockOnlyScrolled,
                                                                                                       Mode=OneWay}"
                                                                    ItemsSource="{Binding Timeline,
                                                                                          Mode=OneWay}" />
                        </i:Interaction.Behaviors>
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </ItemsControl.Template>
        </ItemsControl>
    </DockPanel>
</UserControl>
